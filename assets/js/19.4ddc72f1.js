(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{603:function(a,s,t){"use strict";t.r(s);var n=t(9),e=Object(n.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看docker版本信息")]),a._v("\ndocker version\n")])])]),t("h3",{attrs:{id:"docker-image"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-image"}},[a._v("#")]),a._v(" Docker Image")]),a._v(" "),t("ul",[t("li",[a._v("文件和meta data 的集合（root filesystem）")]),a._v(" "),t("li",[a._v("分层的，并且每一层都可以添加改变删除文件，成为一个新的Image")]),a._v(" "),t("li",[a._v("不同的Image可以共享相同的layer")]),a._v(" "),t("li",[a._v("Image本身是read-only的")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查看本地安装的image")]),a._v("\n$ docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#等同于")]),a._v("\n$ docker images\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# Pull from Registry")]),a._v("\ndocker pull ubuntu:14.04\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除 image 文件")]),a._v("\n$ docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("imageName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 等同于")]),a._v("\n$ docker rmi "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("imageID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n")])])]),t("h3",{attrs:{id:"docker-container"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#docker-container"}},[a._v("#")]),a._v(" Docker Container")]),a._v(" "),t("p",[a._v("image 文件生成的容器实例，本身也是一个文件，称为容器文件**。**也就是说，一旦容器生成，就会同时存在两个文件： image 文件和容器文件。而且关闭容器并不会删除容器文件，只是容器停止运行而已")]),a._v(" "),t("ul",[t("li",[a._v("通过Image创建（copy）")]),a._v(" "),t("li",[a._v("在Image layer之上建立一个container layer（可读写）")]),a._v(" "),t("li",[a._v("类比面向对象：类和实例")]),a._v(" "),t("li",[a._v("Image负责app的存储和分发，Container负责运行app")])]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出本机正在运行的容器")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出本机所有容器，包括终止运行的容器")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" --all\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 等同于")]),a._v("\n$ docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ps")]),a._v(" -a\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 运行image")]),a._v("\n$ docker container run hello-world\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 终止容器")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("containID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除容器")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("containerID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 等同于")]),a._v("\n$ docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("containerID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出所有容器ID")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -aq\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除所有容器")]),a._v("\n$ docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -aq"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 列出所有退出容器ID")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -f "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"status=exited"')]),a._v(" -q\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除所有退出容器")]),a._v("\n$ docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),a._v("docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" -f "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"status=exited"')]),a._v(" -q"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("\n")])])]),t("h3",{attrs:{id:"制作自己的docker-image-container"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#制作自己的docker-image-container"}},[a._v("#")]),a._v(" 制作自己的docker image/container")]),a._v(" "),t("p",[a._v("常用的方法有两种")]),a._v(" "),t("h4",{attrs:{id:"_1-基于container创建image-不建议"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_1-基于container创建image-不建议"}},[a._v("#")]),a._v(" 1. 基于container创建image（不建议）")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 示例")]),a._v("\n$ docker commit "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("containerName"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("newImageName:tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 用下面的命令查看image layer")]),a._v("\n$ docker "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("history")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("imageId"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n")])])]),t("p",[a._v("可以看到，生成container的image和新的image有很多层是共享的，只是在原基础上加了一层")]),a._v(" "),t("h4",{attrs:{id:"_2-基于dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#_2-基于dockerfile"}},[a._v("#")]),a._v(" 2. 基于Dockerfile")]),a._v(" "),t("p",[a._v("编写dockerfile/.dockerignore\n"),t("code",[a._v(".dockerignore")]),a._v(" 示例")]),a._v(" "),t("div",{staticClass:"language- extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("\n.git\nnode_modules\nnpm-debug.log\n\n")])])]),t("p",[t("code",[a._v("dockerfile")])]),a._v(" "),t("div",{staticClass:"language-dockerfile extra-class"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("FROM")]),a._v(" node"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(":")]),a._v("8.4\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("COPY")]),a._v(" . /app\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("WORKDIR")]),a._v(" /app\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("RUN")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"npm"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"install"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("EXPOSE")]),a._v(" 3000/tcp\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# CMD表示容器启动后自动执行的命令，指定了CMD命令以后，docker container run命令就不能附加命令了")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("CMD")]),a._v(" node demos/01.js\n\n")])])]),t("p",[a._v("创建image文件")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# -t 指定image名称，冒号后面跟版本号，不指定的话就是latest")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 最后的点表示dockerfile文件的路径")]),a._v("\n$ docker image build -t koa-demo "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者")]),a._v("\n$ docker image build -t koa-demo:0.0.1 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v(".")]),a._v("\n")])])]),t("p",[a._v("创建成功后，查看image就可以看到新生成的image")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("$ docker image "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n")])])]),t("h3",{attrs:{id:"生成容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#生成容器"}},[a._v("#")]),a._v(" 生成容器")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("\n$ docker container run -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v(":3000 -it koa-demo /bin/bash\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或者")]),a._v("\n$ docker container run -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8000")]),a._v(":3000 -it koa-demo:0.0.1 /bin/bash\n")])])]),t("ul",[t("li",[t("code",[a._v("-p")]),a._v("参数：容器的 3000 端口映射到本机的 8000 端口。")]),a._v(" "),t("li",[t("code",[a._v("-it")]),a._v("参数：容器的 Shell 映射到当前的 Shell，然后你在本机窗口输入的命令，就会传入容器。")]),a._v(" "),t("li",[t("code",[a._v("koa-demo:0.0.1")]),a._v("：image 文件的名字（如果有标签，还需要提供标签，默认是 latest 标签）。")]),a._v(" "),t("li",[t("code",[a._v("/bin/bash")]),a._v("：容器启动以后，内部第一个执行的命令。这里是启动 Bash，保证用户可以使用 Shell。")])]),a._v(" "),t("h3",{attrs:{id:"终止容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#终止容器"}},[a._v("#")]),a._v(" 终止容器")]),a._v(" "),t("p",[a._v("在容器的命令行，按下 Ctrl + c 停止 Node 进程（如果有），然后按下 Ctrl + d （或者输入 exit）退出容器\n也可以用 "),t("code",[a._v("docker container kill")]),a._v(" 终止容器运行。容器停止运行之后，并不会消失，使用 "),t("code",[a._v("docker container rm")]),a._v(" 命令删除容器文件。")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 在本机的另一个终端窗口，查出容器的 ID")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 停止指定的容器运行")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("kill")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("containerID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 查出容器的 ID")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("ls")]),a._v(" --all\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 删除指定的容器文件(id不需要写全)")]),a._v("\n$ docker container "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("containerID"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n\n``"),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")]),a._v("dockerfile\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("### Dockerfile")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#### FROM")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("`")])]),a._v("``bash\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 制作base image")]),a._v("\nFROM scratch\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用base image")]),a._v("\nFROM centos\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 或")]),a._v("\nFROM ubuntu:14.04\n")])])]),t("p",[a._v("功能：描述当前image的base image\n最佳实践：出于安全性考虑，尽量使用官方的image作为base image")]),a._v(" "),t("h4",{attrs:{id:"label"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[a._v("#")]),a._v(" LABEL")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("LABEL "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("maintainer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"kuailoy@gmail.com"')]),a._v("\nLABEL "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("version")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"1.0"')]),a._v("\nLABEL "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("description")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"This is description"')]),a._v("\n")])])]),t("p",[a._v("功能：定义image的meta data，描述image的一些信息\n最佳实践：LABEL信息必不可少")]),a._v(" "),t("h4",{attrs:{id:"run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[a._v("#")]),a._v(" RUN")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("RUN yum update "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" yum "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t\tpython-dev  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 反斜线换行")]),a._v("\n\nRUN "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("npm")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v("\n")])])]),t("p",[a._v("功能：运行命令，安装软件、依赖时常用\n最佳实践：避免无用分层，多条命令合并层一行，复杂的RUN用反斜线换行")]),a._v(" "),t("h4",{attrs:{id:"workdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#workdir"}},[a._v("#")]),a._v(" WORKDIR")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("WORKDIR /root\n\nWORKDIR /test\nWORKDIR demo\nRUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),a._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 输出结果应该是test/demo")]),a._v("\n")])])]),t("p",[a._v("功能：改变工作目录\n最佳实践：尽量使用绝对目录，使用WORKDIR，不要用RUN cd")]),a._v(" "),t("h4",{attrs:{id:"add-copy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add-copy"}},[a._v("#")]),a._v(" ADD & COPY")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("ADD hello /\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 添加到根目录并解压")]),a._v("\nADD  test.tart.gz /\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 与WORKDIR配合使用")]),a._v("\nWORKDIR /root\nADD hello test/    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# /root/test/hello")]),a._v("\n\nWORKDIR /root\nCOPY hello test/\n")])])]),t("p",[a._v("功能：添加本地文件到docker image\n最佳实践：")]),a._v(" "),t("ul",[t("li",[a._v("大部分情况下COPY优于ADD")]),a._v(" "),t("li",[a._v("ADD 除了 COPY 还有额外功能（解压）")]),a._v(" "),t("li",[a._v("添加远程文件/目录请用curl或wget")])]),a._v(" "),t("h4",{attrs:{id:"env"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[a._v("#")]),a._v(" ENV")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("ENV MYSQL_VERSION "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("5.6")]),a._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y mysql-server"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("${MYSQL_VERSION}")]),a._v('"')]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("\\")]),a._v("\n\t\t"),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("rm")]),a._v(" -rf /var/lib/apt/lists/*    "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 引用常量")]),a._v("\n")])])]),t("p",[a._v("功能：设置环境变量/常量\n最佳实践：对于常量多使用ENV增加dockerfile的可维护性")]),a._v(" "),t("h4",{attrs:{id:"volume-expose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volume-expose"}},[a._v("#")]),a._v(" VOLUME & EXPOSE")]),a._v(" "),t("h4",{attrs:{id:"cmd-and-entrypoint"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cmd-and-entrypoint"}},[a._v("#")]),a._v(" CMD and ENTRYPOINT")]),a._v(" "),t("ul",[t("li",[a._v("RUN: 执行命令并创建新的Image Layer")]),a._v(" "),t("li",[a._v("CMD:\n"),t("ul",[t("li",[a._v("容器启动后默认执行的命令和参数")]),a._v(" "),t("li",[a._v("如果docker run 指定了其他命令 CMD命令被忽略")]),a._v(" "),t("li",[a._v("如果定义了多个CMD，只有最后一个会执行")])])]),a._v(" "),t("li",[a._v("ENTRYPOINT：\n"),t("ul",[t("li",[a._v("让容器以应用程序或者服务的形式运行（比如数据库服务）")]),a._v(" "),t("li",[a._v("不会被忽略，一定会执行")]),a._v(" "),t("li",[a._v("最佳实践：写一个shell脚本作为entrypoint")])])])]),a._v(" "),t("p",[a._v("Shell格式")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("RUN "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("apt-get")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" -y "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("vim")]),a._v("\nCMD "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello docker"')]),a._v("\nENTRYPOINT "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello docker"')]),a._v("\n")])])]),t("p",[a._v("Exec格式")]),a._v(" "),t("div",{staticClass:"language-bash extra-class"},[t("pre",{pre:!0,attrs:{class:"language-bash"}},[t("code",[a._v("RUN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"apt-get"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"install"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"-y"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"vim"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nCMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/bin/echo"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello docker"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\nENTRYPOINT "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"bin/echo"')]),a._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello docker"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);